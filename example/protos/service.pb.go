// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/stevepartridge/service/example/protos/service.proto

package protos

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ServiceInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceInfoRequest) Reset()         { *m = ServiceInfoRequest{} }
func (m *ServiceInfoRequest) String() string { return proto.CompactTextString(m) }
func (*ServiceInfoRequest) ProtoMessage()    {}
func (*ServiceInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a008666bb3b24b, []int{0}
}

func (m *ServiceInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceInfoRequest.Unmarshal(m, b)
}
func (m *ServiceInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceInfoRequest.Marshal(b, m, deterministic)
}
func (m *ServiceInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceInfoRequest.Merge(m, src)
}
func (m *ServiceInfoRequest) XXX_Size() int {
	return xxx_messageInfo_ServiceInfoRequest.Size(m)
}
func (m *ServiceInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceInfoRequest proto.InternalMessageInfo

type ServiceInfoResponse struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version              string   `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Build                string   `protobuf:"bytes,3,opt,name=build,proto3" json:"build,omitempty"`
	BuiltAt              string   `protobuf:"bytes,4,opt,name=built_at,json=builtAt,proto3" json:"built_at,omitempty"`
	GitHash              string   `protobuf:"bytes,5,opt,name=git_hash,json=gitHash,proto3" json:"git_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceInfoResponse) Reset()         { *m = ServiceInfoResponse{} }
func (m *ServiceInfoResponse) String() string { return proto.CompactTextString(m) }
func (*ServiceInfoResponse) ProtoMessage()    {}
func (*ServiceInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7a008666bb3b24b, []int{1}
}

func (m *ServiceInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceInfoResponse.Unmarshal(m, b)
}
func (m *ServiceInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceInfoResponse.Marshal(b, m, deterministic)
}
func (m *ServiceInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceInfoResponse.Merge(m, src)
}
func (m *ServiceInfoResponse) XXX_Size() int {
	return xxx_messageInfo_ServiceInfoResponse.Size(m)
}
func (m *ServiceInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceInfoResponse proto.InternalMessageInfo

func (m *ServiceInfoResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ServiceInfoResponse) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *ServiceInfoResponse) GetBuild() string {
	if m != nil {
		return m.Build
	}
	return ""
}

func (m *ServiceInfoResponse) GetBuiltAt() string {
	if m != nil {
		return m.BuiltAt
	}
	return ""
}

func (m *ServiceInfoResponse) GetGitHash() string {
	if m != nil {
		return m.GitHash
	}
	return ""
}

func init() {
	proto.RegisterType((*ServiceInfoRequest)(nil), "example.ServiceInfoRequest")
	proto.RegisterType((*ServiceInfoResponse)(nil), "example.ServiceInfoResponse")
}

func init() {
	proto.RegisterFile("github.com/stevepartridge/service/example/protos/service.proto", fileDescriptor_c7a008666bb3b24b)
}

var fileDescriptor_c7a008666bb3b24b = []byte{
	// 273 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x90, 0xb1, 0x4e, 0xc3, 0x30,
	0x10, 0x86, 0xd5, 0x92, 0x10, 0xb0, 0xc4, 0x62, 0x3a, 0x98, 0xd2, 0x01, 0x65, 0x62, 0x8a, 0x51,
	0xd9, 0x91, 0x40, 0x42, 0x82, 0x0d, 0x95, 0x0d, 0x86, 0xca, 0x69, 0xaf, 0x8e, 0xa5, 0xc4, 0x17,
	0xec, 0x4b, 0xc4, 0xcc, 0x0b, 0x30, 0xf0, 0x68, 0xbc, 0x02, 0x0f, 0x82, 0x62, 0xb7, 0x03, 0x82,
	0x85, 0xc9, 0xf7, 0xff, 0x9f, 0x4f, 0xf2, 0x67, 0x76, 0xa5, 0x0d, 0x55, 0x5d, 0x59, 0xac, 0xb0,
	0x91, 0x9e, 0xa0, 0x87, 0x56, 0x39, 0x72, 0x66, 0xad, 0x41, 0x7a, 0x70, 0xbd, 0x59, 0x81, 0x84,
	0x57, 0xd5, 0xb4, 0x35, 0xc8, 0xd6, 0x21, 0xa1, 0xdf, 0xd5, 0x45, 0x88, 0x3c, 0xdb, 0xd2, 0xe9,
	0x4c, 0x23, 0xea, 0x1a, 0xa4, 0x6a, 0x8d, 0x54, 0xd6, 0x22, 0x29, 0x32, 0x68, 0x7d, 0xbc, 0x96,
	0x4f, 0x18, 0x7f, 0x8c, 0x7b, 0xf7, 0x76, 0x83, 0x0b, 0x78, 0xe9, 0xc0, 0x53, 0xfe, 0x3e, 0x62,
	0xc7, 0x3f, 0x6a, 0xdf, 0xa2, 0xf5, 0xc0, 0x39, 0x4b, 0xac, 0x6a, 0x40, 0x8c, 0xce, 0x46, 0xe7,
	0x87, 0x8b, 0x30, 0x73, 0xc1, 0xb2, 0x1e, 0x9c, 0x37, 0x68, 0xc5, 0x38, 0xd4, 0xbb, 0xc8, 0x27,
	0x2c, 0x2d, 0x3b, 0x53, 0xaf, 0xc5, 0x5e, 0xe8, 0x63, 0xe0, 0x27, 0xec, 0x60, 0x18, 0x68, 0xa9,
	0x48, 0x24, 0x71, 0x21, 0xe4, 0x6b, 0x1a, 0x90, 0x36, 0xb4, 0xac, 0x94, 0xaf, 0x44, 0x1a, 0x91,
	0x36, 0x74, 0xa7, 0x7c, 0x35, 0x7f, 0x66, 0xd9, 0x6d, 0x14, 0xe2, 0x0f, 0x2c, 0x19, 0x1e, 0xc5,
	0x4f, 0x8b, 0xad, 0x62, 0xf1, 0xdb, 0x60, 0x3a, 0xfb, 0x1b, 0x46, 0x8f, 0xfc, 0xe8, 0xed, 0xf3,
	0xeb, 0x63, 0x9c, 0xf1, 0x54, 0x1a, 0xbb, 0xc1, 0x9b, 0xf9, 0xd3, 0xc5, 0x7f, 0x7f, 0xbb, 0xdc,
	0x0f, 0xe7, 0xe5, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x74, 0xf0, 0x30, 0x0f, 0xa8, 0x01, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ExampleClient is the client API for Example service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ExampleClient interface {
	// Get service version and build info
	Info(ctx context.Context, in *ServiceInfoRequest, opts ...grpc.CallOption) (*ServiceInfoResponse, error)
}

type exampleClient struct {
	cc *grpc.ClientConn
}

func NewExampleClient(cc *grpc.ClientConn) ExampleClient {
	return &exampleClient{cc}
}

func (c *exampleClient) Info(ctx context.Context, in *ServiceInfoRequest, opts ...grpc.CallOption) (*ServiceInfoResponse, error) {
	out := new(ServiceInfoResponse)
	err := c.cc.Invoke(ctx, "/example.Example/Info", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ExampleServer is the server API for Example service.
type ExampleServer interface {
	// Get service version and build info
	Info(context.Context, *ServiceInfoRequest) (*ServiceInfoResponse, error)
}

func RegisterExampleServer(s *grpc.Server, srv ExampleServer) {
	s.RegisterService(&_Example_serviceDesc, srv)
}

func _Example_Info_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServiceInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExampleServer).Info(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.Example/Info",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExampleServer).Info(ctx, req.(*ServiceInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Example_serviceDesc = grpc.ServiceDesc{
	ServiceName: "example.Example",
	HandlerType: (*ExampleServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Info",
			Handler:    _Example_Info_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/stevepartridge/service/example/protos/service.proto",
}
